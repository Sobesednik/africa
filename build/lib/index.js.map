{"version":3,"sources":["../../src/lib/index.js"],"names":["exists","path","res","Promise","r","j","err","code","askQuestionsAndWrite","questions","timeout","answers","space"],"mappings":";;;;;;;;AAAA;;AACA;;AACA;;;;AAEO,MAAMA,SAAS,MAAOC,IAAP,IAAgB;AACpC,QAAMC,MAAM,MAAM,IAAIC,OAAJ,CAAY,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACtC,kBAAKJ,IAAL,EAAYK,GAAD,IAAS;AAClB,UAAIA,OAAOA,IAAIC,IAAJ,IAAY,QAAvB,EAAiC;AAC/BH,UAAE,KAAF;AACD,OAFD,MAEO,IAAIE,GAAJ,EAAS;AACdD,UAAEC,GAAF;AACD,OAFM,MAEA;AACLF,UAAE,IAAF;AACD;AACF,KARD;AASD,GAViB,CAAlB;AAWA,SAAOF,GAAP;AACD,CAbM;;;;AAeA,eAAeM,oBAAf,CAAoCC,SAApC,EAA+CR,IAA/C,EAAqDS,OAArD,EAA8D;AACnE,QAAMC,UAAU,MAAM,wBAAIF,SAAJ,EAAeC,OAAf,CAAtB;AACA,QAAM,oBAAMT,IAAN,EAAYU,OAAZ,EAAqB;AAAEC,WAAO;AAAT,GAArB,CAAN;AACA,SAAOD,OAAP;AACD","sourcesContent":["import ask from 'reloquent'\nimport { stat } from 'fs'\nimport bosom from 'bosom'\n\nexport const exists = async (path) => {\n  const res = await new Promise((r, j) => {\n    stat(path, (err) => {\n      if (err && err.code == 'ENOENT') {\n        r(false)\n      } else if (err) {\n        j(err)\n      } else {\n        r(true)\n      }\n    })\n  })\n  return res\n}\n\nexport async function askQuestionsAndWrite(questions, path, timeout) {\n  const answers = await ask(questions, timeout)\n  await bosom(path, answers, { space: 2 })\n  return answers\n}"],"file":"index.js"}