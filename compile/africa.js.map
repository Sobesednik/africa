{
"version":3,
"file":"compile/africa.js",
"lineCount":249,
"mappings":"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",
"sources":["node_modules/path/index.js","node_modules/os/index.js","node_modules/util/index.js","node_modules/fs/index.js","node_modules/stream/index.js","node_modules/erotic/src/lib.js","node_modules/@artdeco/clean-stack/src/index.js","node_modules/erotic/src/callback.js","node_modules/erotic/src/index.js","node_modules/catchment/src/lib/index.js","node_modules/catchment/src/index.js","node_modules/@wrote/read/src/index.js","node_modules/@wrote/write/src/index.js","node_modules/bosom/src/index.js","node_modules/readline/index.js","node_modules/promto/src/index.js","node_modules/reloquent/src/lib/ask.js","node_modules/reloquent/src/lib/ask-questions.js","node_modules/reloquent/src/index.js","src/lib/index.js","src/index.js","src/depack.js"],
"sourcesContent":["export default path\nexport const {\n  basename,\n  delimiter,\n  dirname,\n  extname,\n  format,\n  isAbsolute,\n  join,\n  normalize,\n  parse,\n  posix,\n  relative,\n  resolve,\n  sep,\n  win32,\n} = path","export default os\nexport const {\n  EOL,\n  arch,\n  constants,\n  cpus,\n  endianness,\n  freemem,\n  homedir,\n  hostname,\n  loadavg,\n  networkInterfaces,\n  platform,\n  release,\n  tmpdir,\n  totalmem,\n  type,\n  uptime,\n  userInfo,\n} = os","export default util\nexport const {\n  TextDecoder,\n  TextEncoder,\n  callbackify,\n  debug,\n  debuglog,\n  deprecate,\n  error,\n  format,\n  getSystemErrorName,\n  inherits,\n  inspect,\n  isArray,\n  isBoolean,\n  isBuffer,\n  isDate,\n  isError,\n  isFunction,\n  isNull,\n  isNullOrUndefined,\n  isNumber,\n  isObject,\n  isPrimitive,\n  isRegExp,\n  isString,\n  isSymbol,\n  isUndefined,\n  log,\n  print,\n  promisify,\n  puts,\n} = util","export default fs\nexport const {\n  ReadStream,\n  Stats,\n  WriteStream,\n  access,\n  accessSync,\n  appendFile,\n  appendFileSync,\n  chmod,\n  chmodSync,\n  chown,\n  chownSync,\n  close,\n  closeSync,\n  constants,\n  copyFile,\n  copyFileSync,\n  createReadStream,\n  createWriteStream,\n  exists,\n  existsSync,\n  fchmod,\n  fchmodSync,\n  fchown,\n  fchownSync,\n  fdatasync,\n  fdatasyncSync,\n  fstat,\n  fstatSync,\n  fsync,\n  fsyncSync,\n  ftruncate,\n  ftruncateSync,\n  futimes,\n  futimesSync,\n  lchmod,\n  lchmodSync,\n  lchown,\n  lchownSync,\n  link,\n  linkSync,\n  lstat,\n  lstatSync,\n  mkdir,\n  mkdirSync,\n  mkdtemp,\n  mkdtempSync,\n  open,\n  openSync,\n  read,\n  readFile,\n  readFileSync,\n  readSync,\n  readdir,\n  readdirSync,\n  readlink,\n  readlinkSync,\n  realpath,\n  realpathSync,\n  rename,\n  renameSync,\n  rmdir,\n  rmdirSync,\n  stat,\n  statSync,\n  symlink,\n  symlinkSync,\n  truncate,\n  truncateSync,\n  unlink,\n  unlinkSync,\n  unwatchFile,\n  utimes,\n  utimesSync,\n  watch,\n  watchFile,\n  write,\n  writeFile,\n  writeFileSync,\n  writeSync,\n} = fs","export default stream\nexport const {\n  Duplex,\n  PassThrough,\n  Readable,\n  Stream,\n  Transform,\n  Writable,\n} = stream","const getLastItem = (array) => {\n  const item = array[array.length - 1]\n  return item\n}\nconst getItemsFrom = (array, from) => array.slice(from)\n\n/**\n * Get a segment of the stack string, defaults are from = 0 and oneLine = false.\n * @param {string} stack the stack string\n * @param {number} [from=0] index from which to slice from\n * @param {boolean} [oneLine=false] Whether just first line must be returned\n * @returns {string} A stack segment starting from the specified line.\n */\nexport const getStackSegment = (stack, from = 0, oneLine = false) => {\n  if (from === 0 && !oneLine) {\n    return stack\n  }\n  const splitStack = stack\n    .split('\\n', oneLine ? from + 1 : undefined)\n  if (oneLine) {\n    const line = getLastItem(splitStack)\n    return line\n  } else {\n    const items = getItemsFrom(splitStack, from)\n    return items.join('\\n')\n  }\n}\n\n/**\n * Get the stack trace part of when the erotic function was called. Disregards\n * first two lines.\n * @param {string} stack error's stack\n * @param {boolean} [transparent] trim the top line as well\n * @returns {string} A part of stack\n */\nexport const getEntryStack = (stack, transparent = false) => {\n  const stackSegment = getStackSegment(stack, 2 + (transparent ? 1 : 0))\n  return stackSegment\n}\n\n/**\n * Get stack line of where the callback was called.\n * @param {string} stack Stack string.\n * @returns {string} Stack line.\n */\nexport const getCalleeStackLine = (stack) => {\n  const calleeStackLine = getStackSegment(stack, 2, true)\n  return calleeStackLine\n}\n\nexport const getStackHeading = message => `Error: ${message}`\n\n/**\n * Extract caller from the function's `arguments`.\n * @param {Object} args arguments\n * @returns {!Function} The caller function from `arguments.callee.caller`.\n */\nexport const getCallerFromArguments = (args) => {\n  const { callee: { caller } } = args\n  return caller\n}","import { homedir } from 'os'\n\nconst extractPathRegex = /\\s+at.*(?:\\(|\\s)(.*)\\)?/\nconst pathRegex = /^(?:(?:(?:node|(?:internal\\/[\\w/]*|.*node_modules\\/(?:IGNORED_MODULES)\\/.*)?\\w+)\\.js:\\d+:\\d+)|native)/\n\nconst homeDir = homedir()\n\n/**\n * Remove internal Node.JS lines from the error stack traces.\n * @param {string} stack The error stack to update.\n * @param {!_cleanStack.Config} [options] Options for the program.\n * @param {boolean} [options.pretty=false] Replace the absolute path to the home directory with the `~`. Default `false`.\n * @param {!Array<string>} [options.ignoredModules=\"\uff3b'pirates'\uff3d\"] Which modules to ignore in the path. Default `\uff3b'pirates'\uff3d`.\n */\nconst cleanStack = (stack, options) => {\n  const {\n    pretty = false, ignoredModules = ['pirates'],\n  } = options || {}\n  const j = ignoredModules.join('|')\n  const re = new RegExp(pathRegex.source.replace('IGNORED_MODULES', j))\n\n  return stack.replace(/\\\\/g, '/')\n    .split('\\n')\n    .filter(x => {\n      const pathMatches = x.match(extractPathRegex)\n      if (pathMatches === null || !pathMatches[1]) {\n        return true\n      }\n\n      const match = pathMatches[1]\n\n      // Electron\n      if (match.includes('.app/Contents/Resources/electron.asar') ||\n        match.includes('.app/Contents/Resources/default_app.asar')) {\n        return false\n      }\n\n      return !re.test(match)\n    })\n    .filter(x => x.trim())\n    .map(x => {\n      if (pretty) {\n        return x.replace(extractPathRegex, (m, p1) => m.replace(p1, p1.replace(homeDir, '~')))\n      }\n\n      return x\n    })\n    .join('\\n')\n}\n\nexport default cleanStack\n\n/* documentary types/index.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_cleanStack.Config} Config Options for the program.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _cleanStack.Config Options for the program.\n * @prop {boolean} [pretty=false] Replace the absolute path to the home directory with the `~`. Default `false`.\n * @prop {!Array<string>} [ignoredModules=\"\uff3b'pirates'\uff3d\"] Which modules to ignore in the path. Default `\uff3b'pirates'\uff3d`.\n */\n","import cleanStack from '@artdeco/clean-stack'\nimport {\n  getCallerFromArguments, getCalleeStackLine, getStackHeading,\n} from './lib'\n\n/**\n * Create a callback.\n * @param {!Function} entryCaller The function which was called at entry.\n * @param {string} entryStack The first line of the error stack to be returned\n * @param {boolean} [shadow=false] Print only entry stack.\n */\nexport function makeCallback(entryCaller, entryStack, shadow = false) {\n  /**\n   * This callback should be called when an asynchronous error occurred.\n   * @param {(string|Error)} messageOrError A message string or an _Error_ object at the point of actual error.\n   * @returns {Error} An error with the updated stack which includes the callee.\n   */\n  function cb(messageOrError) {\n    const caller = getCallerFromArguments(arguments)\n    const { stack: errorStack } = new Error()\n    const calleeStackLine = getCalleeStackLine(errorStack)\n    const isError = messageOrError instanceof Error\n    const message = isError ? messageOrError.message : messageOrError\n\n    const stackHeading = getStackHeading(message)\n    const entryHasCallee = caller !== null && entryCaller === caller\n    const stackMessage = [\n      stackHeading,\n      ...(entryHasCallee || shadow ? [entryStack] : [\n        calleeStackLine,\n        entryStack,\n      ]),\n    ].join('\\n')\n\n    const stack = cleanStack(stackMessage)\n    const properties = { message, stack }\n    const e = isError ? messageOrError : new Error()\n\n    return /** @type {Error} */ (Object.assign(/** @type {!Object} */ (e), properties))\n  }\n\n  return cb\n}","import {\n  getEntryStack, getCallerFromArguments,\n} from './lib'\nimport { makeCallback } from './callback'\n\n/**\n * Returns a function to create an error with a stack trace starting at the line in code when the call was made by the callee.\n * @param {boolean} [transparent] Pretend as if the call to the function lead to the error, without exposing any of the internal stack.\n */\nexport default function erotic(transparent) {\n  const { stack } = new Error()\n  const caller = getCallerFromArguments(arguments)\n  const entryStack = getEntryStack(stack, transparent)\n\n  return makeCallback(caller, entryStack, transparent)\n}","/**\n * Listens for the `error` event once so that when an error in _streamB_ is emitted, is is also emitted in the _streamA_.\n * @param {stream.Stream} streamA The stream that will emit an error once it's caught in the `streamB`.\n * @param {stream.Stream} streamB The stream from which the error originates.\n * @returns The stream the error is listened on, i.e., transparent to calling the `.once` method on that stream.\n */\nexport const pipeError = (streamA, streamB) => {\n  streamB\n    .once('error', e => {\n      streamA.emit('error', e)\n    })\n  return streamB\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('stream').Stream} stream.Stream\n */","import { Writable } from 'stream'\nimport erotic from 'erotic'\nimport cleanStack from '@artdeco/clean-stack'\nimport { pipeError } from './lib'\n\nfunction joinBufferData(array) {\n  return array.join('')\n}\n\n/**\n * A writable stream which collects incoming data into memory, and provides a promise to way for the stream to finish. The promise is resolved with joined chunks.\n */\nexport default class Catchment extends Writable {\n  /**\n   * Create a new catchment to pipe a readable stream into and collect all emitted data.\n   * @param {!_catchment.Options} [options] Options to pass to the `Writable` super constructor, and others shown below.\n   * @param {!stream.Readable} [options.rs] A readable stream to automatically pipe into the catchment. If an error occurs during reading of this stream, the catchment promise will be rejected with it.\n   * @param {boolean} [options.binary=false] Whether to return a raw buffer instead of a string. The string is created by joining all incoming chunks together with `.join('')` method. Default `false`.\n   * @example\n   *\n   * import { createReadStream } from 'fs'\n   * import Catchment from 'catchment'\n   *\n   * const rs = createReadStream('file.txt')\n   * const { promise } = new Catchment({ rs })\n   * const res = await promise\n   */\n  constructor(options) {\n    const {\n      binary = false, rs = null, ...opts\n    } = options || {}\n    /** @suppress {missingProperties} */\n    const { er = erotic(true), proxyError } = options || {}\n    const wrap = (_, e) => er(e)\n    super(/** @type {!stream.WritableOptions} */ (opts))\n    this._caughtData = []\n    this._promise = new Promise((r, j) => {\n      this.on('finish', () => {\n        let d\n        if (binary) {\n          d = Buffer.concat(this._caughtData)\n        } else {\n          d = joinBufferData(this._caughtData)\n        }\n        r(d)\n        this._caughtData = []\n      })\n      this.once('error', (e) => {\n        if (e.stack.indexOf('\\n') == -1) {\n          wrap`${e}`\n          j(e)\n        } else {\n          const stack = cleanStack(e.stack)\n          e.stack = stack\n          if (proxyError) wrap`${e}`\n          j(e)\n        }\n      })\n      if (rs) {\n        pipeError(this, rs).pipe(this)\n      }\n    })\n  }\n  _write(chunk, encoding, callback) {\n    this._caughtData.push(chunk)\n    callback()\n  }\n  /**\n   * A promise which will resolve will all data when the stream finishes.\n   * @type {Promise<string|Buffer>}\n   */\n  get promise() {\n    return this._promise\n  }\n}\n\n/**\n * Collect data into a catchment, and return results when the stream finishes.\n * @param {stream.Readable} readable A readable stream to collect all data from. If an error occurs during reading of this stream, the promise will be rejected with it.\n * @param {_catchment.CollectOptions} options Options when collecting data into a catchment. They can extend `Writable` options which will be passed to the `Catchment` constructor.\n * @param {boolean} [options.binary=false] Whether to return a raw buffer instead of a string. The string is created by joining all incoming chunks together with `.join('')` method. Default `false`.\n * @param {boolean} [options.proxyError=false] Sets whether an error emitted by the stream with have its stack start at the line where the `collect` was called rather than inside of the stream. In other words, hides the implementation of the stream. Default `false`.\n * @example\n *\n * import { collect } from 'catchment'\n * import { createReadStream } from 'fs'\n *\n * const rs = createReadStream(path)\n * await collect(rs, { proxyError: true })\n */\nexport const collect = async (readable, options = {}) => {\n  const { promise } = new Catchment({\n    rs: readable,\n    ...options,\n    er: erotic(true),\n  })\n  const res = await promise\n  return res\n}\n\n/* typal types/index.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_catchment.Options} Options Options to pass to the `Writable` super constructor, and others shown below.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _catchment.Options Options to pass to the `Writable` super constructor, and others shown below.\n * @prop {!stream.Readable} [rs] A readable stream to automatically pipe into the catchment. If an error occurs during reading of this stream, the catchment promise will be rejected with it.\n * @prop {boolean} [binary=false] Whether to return a raw buffer instead of a string. The string is created by joining all incoming chunks together with `.join('')` method. Default `false`.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('stream').Readable} stream.Readable\n */\n\n/* typal types/collect.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_catchment.CollectOptions} CollectOptions Options when collecting data into a catchment. They can extend `Writable` options which will be passed to the `Catchment` constructor.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _catchment.CollectOptions Options when collecting data into a catchment. They can extend `Writable` options which will be passed to the `Catchment` constructor.\n * @prop {boolean} [binary=false] Whether to return a raw buffer instead of a string. The string is created by joining all incoming chunks together with `.join('')` method. Default `false`.\n * @prop {boolean} [proxyError=false] Sets whether an error emitted by the stream with have its stack start at the line where the `collect` was called rather than inside of the stream. In other words, hides the implementation of the stream. Default `false`.\n */\n","import { createReadStream } from 'fs'\nimport { collect } from 'catchment'\n\n/**\n * Read a file.\n * @param {string} path The path to the file to read.\n */\nexport default async function read(path) {\n  const rs = createReadStream(path)\n  /** @type {string} */\n  const res = await collect(rs)\n  return res\n}\n\n/**\n * Read a file as a buffer.\n * @param {string} path The path to the file to read.\n */\nexport async function readBuffer(path) {\n  const rs = createReadStream(path)\n  /** @type {Buffer} */\n  const res = await collect(rs, { binary: true })\n  return res\n}","import { createWriteStream } from 'fs'\nimport erotic from 'erotic'\n\n/**\n * Write a file to the filesystem.\n * @param {string} path The path of the file to write.\n * @param {string|Buffer} data The data to write.\n */\nexport default async function write(path, data) {\n  if (!path) throw new Error('No path is given.')\n  const er = erotic(true)\n  const ws = createWriteStream(path)\n  await new Promise((r, j) => {\n    ws\n      .on('error', (e) => {\n        const err = er(e)\n        j(err)\n      })\n      .on('close', r)\n      .end(data)\n  })\n}","import { debuglog } from 'util'\nimport read from '@wrote/read'\nimport write from '@wrote/write'\n\nconst LOG = debuglog('bosom')\n\nconst writeJSON = async (path, data, config) => {\n  const {\n    replacer = null,\n    space = null,\n  } = config\n  const json = JSON.stringify(data, replacer, space)\n  await write(path, json)\n}\n\n/**\n * Read or write a JSON file.\n * @param {string} path Path to the file to read.\n * @param {Object} [data] Data to write to the file (if JSON file exists, fields in it will be overridden).\n * @param {!_bosom.Options} [config] how to write data.\n */\nconst bosom = async (path, data, config = {}) => {\n  if (data) {\n    const res = await writeJSON(path, data, config)\n    return res\n  }\n  LOG('Reading %s', path)\n  const r = await read(path)\n  const res = JSON.parse(r)\n  return res\n}\n\nexport default bosom\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').Options} _bosom.Options\n */","export default readline\nexport const {\n  Interface,\n  clearLine,\n  clearScreenDown,\n  createInterface,\n  cursorTo,\n  emitKeypressEvents,\n  moveCursor,\n} = readline","function createTimeout(desc, timeout, cb) {\n  return setTimeout(() => {\n    const message = `${desc ? desc : 'Promise'} has timed out after ${timeout}ms`\n    const err = new Error(message)\n    err.stack = `Error: ${err.message}`\n    cb(err)\n  }, timeout)\n}\n\nfunction makeTimeoutPromise(desc, timeout) {\n  let to\n  const promise = new Promise((_, reject) => {\n    to = createTimeout(desc, timeout, reject)\n  })\n  return { timeout: to, promise }\n}\n\n/**\n * Create a promise which will be rejected after a timeout.\n * @param {!Promise} promise A promise to race with\n * @param {number} timeout Timeout in ms after which to reject\n * @param {string} [desc] Description of a promise to be printed in error\n * @returns {!Promise} A promise with a timeout\n */\nexport default async function createPromiseWithTimeout(promise, timeout, desc) {\n  if (!(promise instanceof Promise))\n    throw new Error('Promise expected')\n  if (!timeout)\n    throw new Error('Timeout must be a number')\n  if (timeout < 0)\n    throw new Error('Timeout cannot be negative')\n\n  const { promise: toPromise, timeout: to } = makeTimeoutPromise(desc, timeout)\n  try {\n    return await Promise.race([\n      promise,\n      toPromise,\n    ])\n  } finally {\n    clearTimeout(to)\n  }\n}","import { createInterface } from 'readline'\nimport promto from 'promto'\n\n/**\n * Ask user a question and wait for an answer.\n * @param {string} question Question to present to the user.\n * @param {{ password: (boolean| undefined), timeout: (number|undefined), input: (stream.Readable|NodeJS.ReadStream|undefined), output: (stream.Writable|NodeJS.WriteStream|undefined) }} options The options.\n */\nexport default function ask(question, options = {}) {\n  const {\n    timeout,\n    password = false,\n    output = process.stdout,\n    input = process.stdin,\n    ...rest\n  } = options\n  const rl = createInterface(/** @type {!readline.ReadLineOptions} */ ({\n    input,\n    output,\n    ...rest,\n  }))\n  if (password) {\n    /**\n     * Undocumented API.\n     * @type {!NodeJS.WriteStream}\n     * @suppress {checkTypes}\n     */\n    const o = rl['output']\n    /**\n     * Undocumented API.\n     * @suppress {checkTypes}\n     */\n    rl['_writeToOutput'] = (s) => {\n      if (['\\r\\n', '\\n', '\\r'].includes(s))\n        return o.write(s)\n\n      const v = s.split(question)\n      if (v.length == '2') {\n        o.write(question)\n        o.write('*'.repeat(v[1].length))\n      } else {\n        o.write('*')\n      }\n    }\n  }\n  const p = new Promise(rl.question.bind(rl, question))\n\n  const promise = timeout\n    ? promto(p, timeout, `reloquent: ${question}`)\n    : p\n  /**\n   * @suppress {checkTypes}\n   */\n  rl['promise'] = tryPromise(promise, rl)\n  return rl\n}\n\nconst tryPromise = async (promise, rl) => {\n  try {\n    const res = await promise\n    return res\n  } finally {\n    rl.close()\n  }\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('stream').Readable} stream.Readable\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('stream').Writable} stream.Writable\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('readline').ReadLineOptions} readline.ReadLineOptions\n */","import ask from './ask'\n\n/**\n * Color foreground with grey\n * @param {string} t\n */\nexport function c(t) {\n  return `\\x1b[90m${t}\\x1b[0m`\n}\n\n/**\n * Ask a set of questions.\n * @param {_reloquent.Questions} questions An object with questions as values\n * @param {number} [timeout] How long to wait before answer\n * @returns {!Promise<!Object<string, string>>} A promise where keys from the questions object are validated, assigned default values if required, and populated with answers. Validation function should either throw or return nothing, or throw an error.\n */\nexport default async function askQuestions(questions, timeout) {\n  if (typeof questions != 'object')\n    throw new Error('Please give an object with questions')\n\n  const keys = Object.keys(/** @type {!Object} */ (questions))\n  const res = await keys.reduce(async (acc, key) => {\n    const accRes = await acc\n\n    const value = questions[key]\n    /** @type {!_reloquent.Question} */\n    let question\n    switch (typeof value) {\n    case 'object':\n      question = /** @type {!_reloquent.Question} */ ({ ...value })\n      break\n    case 'string':\n      question = { text: value }\n      break\n    default:\n      throw new Error('A question must be a string or an object.')\n    }\n\n    question.text = `${question.text}${question.text.endsWith('?') ? '' : ':'} `\n\n    let defaultValue\n    let gotDefaultValue\n    if (question.defaultValue) {\n      defaultValue = question.defaultValue\n    }\n    if (question.getDefault) {\n      gotDefaultValue = await question.getDefault()\n    }\n\n    let dv = defaultValue || ''\n    if (defaultValue && gotDefaultValue && defaultValue != gotDefaultValue) {\n      dv = c(defaultValue)\n    } else if (defaultValue && defaultValue == gotDefaultValue) {\n      dv = ''\n    }\n    let gtd = gotDefaultValue || ''\n    const text = `${question.text}${dv ? `[${dv}] ` : ''}${gtd ? `[${gtd}] ` : ''}`\n    const { 'promise': promise } = ask(text, {\n      timeout,\n      password: question.password,\n    })\n\n    const a = await promise\n    let answer = a || gotDefaultValue || question.defaultValue\n\n    if (typeof question.validation == 'function') {\n      question.validation(answer)\n    }\n    if (typeof question.postProcess == 'function') {\n      answer = await question.postProcess(answer)\n    }\n    return {\n      ...accRes,\n      [key]: answer,\n    }\n  }, {})\n\n  return res\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../../types').Questions} _reloquent.Questions\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../../types').Question} _reloquent.Question\n */","import askQuestions from './lib/ask-questions'\n\n/**\n * Ask user questions via the CLI. Returns an object with keys as questions' texts and values as answers.\n * @param {_reloquent.Questions} questions A set of questions.\n * @param {number} [timeout] How long to wait before rejecting the promise. Waits forever by default.\n */\nexport default async function reloquent(questions, timeout) {\n  const res = await askQuestions(questions, timeout)\n  return res\n}\n\n/**\n * Ask user a question via the CLI. Returns the answer to the question.\n * @param {string|!_reloquent.Question} question A question to present to the user.\n * @param {number} [timeout] How long to wait before rejecting the promise. Waits forever by default.\n */\nexport async function askSingle(question, timeout) {\n  const { question: answer } = await askQuestions({ question }, timeout)\n  return answer\n}\n\n/**\n * Ask a yes/no question. Returns `true` when answer was `y` and `false` otherwise.\n * @param {string} question The question, such as \"Add default options\", or \"Continue to delete?\".\n * @param {_reloquent.ConfirmOptions} [options] Options for the confirmation question.\n * @param {boolean} [options.defaultYes=true] Whether the default value is _yes_. Default `true`.\n * @param {number} [options.timeout] How long to wait before rejecting the promise. Waits forever by default.\n */\nexport async function confirm(question, options = {}) {\n  const {\n    defaultYes = true,\n    timeout,\n  } = options\n  const hasQ = question.endsWith('?')\n  const text = `${hasQ ? question.replace(/\\?$/, '') : question} (y/n)${hasQ ? '?' : ''}`\n  const { question: answer } = await askQuestions({\n    question: {\n      text,\n      defaultValue: defaultYes ? 'y' : 'n',\n    },\n  }, timeout)\n  return answer == 'y'\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').ConfirmOptions} _reloquent.ConfirmOptions\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').Question} _reloquent.Question\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').Questions} _reloquent.Questions\n */\n","import ask from 'reloquent'\nimport { stat } from 'fs'\nimport bosom from 'bosom'\n\nexport const exists = async (path) => {\n  const res = await new Promise((r, j) => {\n    stat(path, (err) => {\n      if (err && err.code == 'ENOENT') {\n        r(false)\n      } else if (err) {\n        j(err)\n      } else {\n        r(true)\n      }\n    })\n  })\n  return res\n}\n\n/**\n * @param {_reloquent.Questions} questions\n * @param {string} path\n * @param {number} [timeout]\n */\nexport async function askQuestionsAndWrite(questions, path, timeout) {\n  const answers = await ask(questions, timeout)\n  await bosom(path, answers, { space: 2 })\n  return answers\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('reloquent/types').Questions} _reloquent.Questions\n */\n","import { resolve } from 'path'\nimport { homedir as home } from 'os'\nimport bosom from 'bosom'\nimport { exists, askQuestionsAndWrite } from './lib'\n\n/**\n * Read package configuration from the home directory, or ask questions with\n * readline interface to create a new configuration in `~/.${packageName}rc`\n * @param {string} packageName The name of the package.\n * @param {!_reloquent.Questions} questions An object with questions to be passed to reloquent.\n * @param {!_africa.Config} [config] Configuration object.\n */\nexport default async function africa(packageName, questions = {}, config = {}) {\n  if (typeof packageName != 'string')\n    throw new Error('Package name is required.')\n\n  const {\n    homedir = home(),\n    rcNameFunction = p => `.${p}rc`,\n    force = false,\n    local = false,\n    questionsTimeout,\n  } = config\n\n  const rc = rcNameFunction(packageName)\n  const path = resolve(homedir, rc)\n\n  const homeEx = await exists(path)\n\n  if (local) {\n    const localPath = resolve(rc)\n    const localEx = await exists(localPath)\n    const c = await handleLocal(homeEx, localEx, path, localPath, questions, questionsTimeout, force)\n    return c\n  }\n\n  const c = await handleHome(homeEx, path, questions, questionsTimeout, force)\n  return c\n}\n\nconst handleHome = async (homeEx, path, questions, questionsTimeout, force) => {\n  if (!homeEx) {\n    const conf = await askQuestionsAndWrite(questions, path, questionsTimeout)\n    return conf\n  }\n  const p = await getParsed(path, questions, force, questionsTimeout)\n  return p\n}\n\nconst getParsed = async (path, questions, force, questionsTimeout) => {\n  const parsed = await bosom(path)\n  if (force) {\n    const c = await forceQuestions(questions, path, parsed, questionsTimeout)\n    return c\n  }\n  return parsed\n}\n\nconst handleLocal = async (homeEx, localEx, path, localPath, questions, questionsTimeout, force) => {\n  if (!localEx) {\n    const h = homeEx ? await bosom(path) : {}\n    const conf = await forceQuestions(questions, localPath, h, questionsTimeout)\n    return conf\n  }\n  const p = await getParsed(localPath, questions, force, questionsTimeout)\n  return p\n}\n\nconst forceQuestions = async (questions, path, config, questionsTimeout) => {\n  const q = extendQuestions(questions, config)\n  const conf = await askQuestionsAndWrite(q, path, questionsTimeout)\n  return conf\n}\n\n/**\n *\n * @param {_reloquent.Questions} questions A set of questions to extend with default value from the existing config.\n * @param {!Object} current Current configuration object.\n * @returns {_reloquent.Questions} Questions with updated defaultValue where answers were present in the passed config object.\n */\nconst extendQuestions = (questions, current) => {\n  const q = Object.keys(questions).reduce((acc, key) => {\n    const question = questions[key]\n    const defaultValue = current[key]\n    const value = {\n      ...question,\n      ...(defaultValue ? { defaultValue } : {}),\n    }\n\n    return {\n      ...acc,\n      [key]: value,\n    }\n  }, {})\n  return q\n}\n\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('reloquent/types').Questions} _reloquent.Questions\n */\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').Config} _africa.Config\n */","import '../types/externs'\nimport africa from './'\n\nmodule.exports = africa"],
"names":["resolve","path","homedir","os","debuglog","util","createReadStream","createWriteStream","stat","fs","Writable","stream","getStackSegment","stack","from","oneLine","splitStack","split","undefined","item","length","slice","items","join","getEntryStack","transparent","stackSegment","getCallerFromArguments","args","caller","extractPathRegex","pathRegex","homeDir","cleanStack","pretty","ignoredModules","j","re","RegExp","source","replace","filter","x","pathMatches","match","includes","test","trim","map","m","p1","makeCallback","entryCaller","entryStack","shadow","cb","messageOrError","arguments","errorStack","Error","calleeStackLine","message","isError","stackMessage","stackHeading","Object","assign","e","properties","erotic","pipeError","streamA","streamB","once","emit","Catchment","options","binary","rs","opts","er","proxyError","wrap","_","_caughtData","_promise","Promise","r","on","d","Buffer","concat","indexOf","pipe","chunk","encoding","callback","push","collect","readable","promise","res","read","write","data","ws","err","end","LOG","writeJSON","config","replacer","space","json","JSON","stringify","bosom","parse","createInterface","readline","createTimeout","desc","timeout","setTimeout","makeTimeoutPromise","to","reject","createPromiseWithTimeout","toPromise","race","clearTimeout","ask","question","password","output","process","stdout","input","stdin","rest","rl","o","s","v","repeat","p","bind","promto","tryPromise","close","askQuestions","questions","keys","reduce","acc","key","accRes","value","text","endsWith","gotDefaultValue","defaultValue","getDefault","dv","gtd","answer","a","validation","postProcess","reloquent","exists","code","askQuestionsAndWrite","answers","handleHome","homeEx","questionsTimeout","force","getParsed","conf","parsed","c","forceQuestions","handleLocal","localEx","localPath","h","q","extendQuestions","current","module","exports","africa","packageName","home","rcNameFunction","local","rc"]
}
